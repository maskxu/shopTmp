{"version":3,"file":"pull.js","sourceRoot":"","sources":["../../../../src/cli/commands/theme/pull.ts"],"names":[],"mappings":"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","sourcesContent":["import {themeFlags} from '../../flags.js'\nimport {ensureThemeStore} from '../../utilities/theme-store.js'\nimport ThemeCommand from '../../utilities/theme-command.js'\nimport {DevelopmentThemeManager} from '../../utilities/development-theme-manager.js'\nimport {showEmbeddedCLIWarning} from '../../utilities/embedded-cli-warning.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {execCLI2} from '@shopify/cli-kit/node/ruby'\nimport {ensureAuthenticatedThemes} from '@shopify/cli-kit/node/session'\nimport {useEmbeddedThemeCLI} from '@shopify/cli-kit/node/context/local'\n\nexport default class Pull extends ThemeCommand {\n  static description = 'Download your remote theme files locally.'\n\n  static flags = {\n    ...globalFlags,\n    ...themeFlags,\n    theme: Flags.string({\n      char: 't',\n      description: 'Theme ID or name of the remote theme.',\n      env: 'SHOPIFY_FLAG_THEME_ID',\n    }),\n    development: Flags.boolean({\n      char: 'd',\n      description: 'Pull theme files from your remote development theme.',\n      env: 'SHOPIFY_FLAG_DEVELOPMENT',\n    }),\n    live: Flags.boolean({\n      char: 'l',\n      description: 'Pull theme files from your remote live theme.',\n      env: 'SHOPIFY_FLAG_LIVE',\n    }),\n    nodelete: Flags.boolean({\n      char: 'n',\n      description: 'Runs the pull command without deleting local files.',\n      env: 'SHOPIFY_FLAG_NODELETE',\n    }),\n    only: Flags.string({\n      char: 'o',\n      multiple: true,\n      description: 'Download only the specified files (Multiple flags allowed).',\n      env: 'SHOPIFY_FLAG_ONLY',\n    }),\n    ignore: Flags.string({\n      char: 'x',\n      multiple: true,\n      description: 'Skip downloading the specified files (Multiple flags allowed).',\n      env: 'SHOPIFY_FLAG_IGNORE',\n    }),\n    force: Flags.boolean({\n      hidden: true,\n      char: 'f',\n      description: 'Proceed without confirmation, if current directory does not seem to be theme directory.',\n      env: 'SHOPIFY_FLAG_FORCE',\n    }),\n  }\n\n  static cli2Flags = ['theme', 'development', 'live', 'nodelete', 'only', 'ignore', 'force', 'development-theme-id']\n\n  async run(): Promise<void> {\n    showEmbeddedCLIWarning()\n\n    const {flags} = await this.parse(Pull)\n    const store = ensureThemeStore(flags)\n    const adminSession = await ensureAuthenticatedThemes(store, flags.password)\n\n    const developmentThemeManager = new DevelopmentThemeManager(adminSession)\n    const theme = await (flags.development ? developmentThemeManager.find() : developmentThemeManager.fetch())\n    if (theme) {\n      if (flags.development) {\n        flags.theme = `${theme.id}`\n        flags.development = false\n      }\n      if (useEmbeddedThemeCLI()) {\n        flags['development-theme-id'] = theme.id\n      }\n    }\n\n    const flagsToPass = this.passThroughFlags(flags, {allowedFlags: Pull.cli2Flags})\n    const command = ['theme', 'pull', flags.path, ...flagsToPass]\n\n    await execCLI2(command, {store, adminToken: adminSession.token})\n  }\n}\n"]}